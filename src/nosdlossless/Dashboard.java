/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nosdlossless;

import Arithmetic.Arithmetic;
import Arithmetic.Huffman;
import Arithmetic.LZW;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author ThanhNhan
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    Arithmetic ar = new Arithmetic();
    Huffman hf = new Huffman();
    LZW lw = new LZW();

    public Dashboard() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel1 = new javax.swing.JPanel();
        filePathField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        LZWSelect = new javax.swing.JCheckBox();
        HuffmanSelect = new javax.swing.JCheckBox();
        ArithmeticSelect = new javax.swing.JCheckBox();
        compressButton = new javax.swing.JButton();
        progressBar1 = new javax.swing.JProgressBar();
        decompressButton = new javax.swing.JButton();
        decompressType = new javax.swing.JTextField();
        algorithmsLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        console.setColumns(20);
        console.setRows(5);
        jScrollPane1.setViewportView(console);

        LZWSelect.setText("LZW");
        LZWSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LZWSelectActionPerformed(evt);
            }
        });

        HuffmanSelect.setText("Huffman Encoding");

        ArithmeticSelect.setText("Arithmetic Coding");

        compressButton.setText("Compress");
        compressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compressButtonActionPerformed(evt);
            }
        });

        decompressButton.setText("Decompress");
        decompressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decompressButtonActionPerformed(evt);
            }
        });

        algorithmsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        algorithmsLabel.setText("Text Compression Algorithms");

        jLabel1.setText("File Name:");

        jLabel2.setText("File Lenght:");

        jLabel4.setText("File Path:");

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(decompressType, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(decompressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Panel1Layout.createSequentialGroup()
                            .addGap(271, 271, 271)
                            .addComponent(jLabel2)
                            .addGap(173, 173, 173)
                            .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(Panel1Layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(compressButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(progressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))))
                        .addGroup(Panel1Layout.createSequentialGroup()
                            .addGap(169, 169, 169)
                            .addComponent(algorithmsLabel))
                        .addGroup(Panel1Layout.createSequentialGroup()
                            .addGap(54, 54, 54)
                            .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Panel1Layout.createSequentialGroup()
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(126, 126, 126)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel4)
                                .addGroup(Panel1Layout.createSequentialGroup()
                                    .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(Panel1Layout.createSequentialGroup()
                                            .addComponent(LZWSelect)
                                            .addGap(60, 60, 60)
                                            .addComponent(HuffmanSelect)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ArithmeticSelect))
                                        .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(54, 54, 54)
                                    .addComponent(browseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(algorithmsLabel)
                .addGap(18, 18, 18)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addGap(29, 29, 29)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LZWSelect)
                    .addComponent(HuffmanSelect)
                    .addComponent(ArithmeticSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(compressButton)
                .addGap(18, 18, 18)
                .addComponent(progressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decompressButton)
                    .addComponent(decompressType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser browser = new JFileChooser();
        browser.showOpenDialog(null);
        File File = browser.getSelectedFile();
        filePathField.setText(File.getAbsolutePath());
        jTextField1.setText(File.getName()); // File.getName()
        jTextField3.setText(File.getParent()); //File.getParent()
        Long an = File.length(); //File.length;
        String s = String.valueOf(an);
        jTextField2.setText(s);
        String extension = jTextField1.getText();
        extension = extension.substring(extension.lastIndexOf('.') + 1);
        compressButton.setEnabled(false);
        algorithmsLabel.setEnabled(false);
        decompressButton.setEnabled(true);
        LZWSelect.setEnabled(false);
        HuffmanSelect.setEnabled(false);
        ArithmeticSelect.setEnabled(false);
        switch (extension) {
            case "txt":
                compressButton.setEnabled(true);
                algorithmsLabel.setEnabled(true);
                decompressButton.setEnabled(false);
                decompressType.setText("");
                LZWSelect.setEnabled(true);
                HuffmanSelect.setEnabled(true);
                ArithmeticSelect.setEnabled(true);
                break;
            case "lzw":
                decompressType.setText("LZW");
                break;
            case "huffman":
                decompressType.setText("Huffman Encoding");
                break;
            case "art":
                decompressType.setText("Arithmetic Coding");
                break;
            default:
                compressButton.setEnabled(false);
                decompressButton.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Invalid Extension. \n Only *.txt, *.lzw, *.huffman, *.art are supported");
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void LZWSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LZWSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LZWSelectActionPerformed

    private void compressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compressButtonActionPerformed
        // TODO add your handling code here:

        File file = null;
        compressButton.setEnabled(false);
        algorithmsLabel.setEnabled(false);
        Thread procces = new Thread(() -> {
           
            int i = 0;
          
            if (LZWSelect.isSelected()) {
                ++i;
            }
            if (HuffmanSelect.isSelected()) {
                ++i;
            }
            if (ArithmeticSelect.isSelected()) {
                ++i;
            }
            int incrementValue = (int) ((1 / (double) i) * 100);
            String filePath = jTextField3.getText();
            String fileName = jTextField1.getText();
            String inputString = "";
            Long originalFileSize = Long.parseLong(jTextField2.getText());
            try {
                inputString = new String(Files.readAllBytes(Paths.get(filePathField.getText())));
            } catch (IOException e1) {
                JOptionPane.showMessageDialog(null, "Can't Open File");
                e1.printStackTrace();
                return;
            }
            progressBar1.setValue(0);
            console.setText("Running... \n");

            if (LZWSelect.isSelected()) {
                Long newFileSize = lw.Compress(inputString, fileName, filePath);
                long savedBytes = originalFileSize - newFileSize;
                int ratio = (int) ((double) newFileSize / originalFileSize * 100);
                int savedRatio = 100 - ratio;
                console.append(
                        "================================================== \n"
                        + "LZW  nen hoan tat 100% \n"
                        + "- Kich thuoc ban dau = " + originalFileSize + " Byte.\n"
                        + "- Kich thuoc khi nen = " + newFileSize + " Byte.\n"
                        + "- Do chenh lech = " + savedBytes + " Byte.\n"
                        + "- Tile = " + (savedRatio < 0 ? "+" : "") + savedRatio * -1 + "% cua file ban dau\n"
                  
                );
                progressBar1.setValue(progressBar1.getValue() + incrementValue);
                progressBar1.repaint();
            }

            if (HuffmanSelect.isSelected()) {
                Long newFileSize = hf.Compress(inputString, fileName, filePath);
                long savedBytes = originalFileSize - newFileSize;
                int ratio = (int) ((double) newFileSize / originalFileSize * 100);
                int savedRatio = 100 - ratio;
                console.append(
                        "\n================================================== \n"
                        + "Huffman nen hoan tat 100% \n"
                        + "- Kich thuoc ban dau = " + originalFileSize + " Byte.\n"
                        + "- Kich thuoc khi nen = " + newFileSize + " Byte.\n"
                        + "- Do chenh lech = " + savedBytes + " Byte.\n"
                        + "- Ti le = " + (savedRatio < 0 ? "+" : "") + savedRatio * -1 + "% cua file ban dau\n"
                    
                );
                progressBar1.setValue(progressBar1.getValue() + incrementValue);
                progressBar1.repaint();
            }
            if (ArithmeticSelect.isSelected()) {
                Long newFileSize = ar.Compress(inputString, fileName, filePath);
                long savedBytes = originalFileSize - newFileSize;
                int ratio = (int) ((double) newFileSize / originalFileSize * 100);
                int savedRatio = 100 - ratio;
                console.append(
                        "\n================================================== \n"
                        + "Arithmetic nen hoan tat 100% \n"
                        + "- Kich thuoc ban dau = " + originalFileSize + " Byte.\n"
                        + "- Kich thuoc khi nen = " + newFileSize + " Byte.\n"
                        + "- Do chenh lech = " + savedBytes + " Byte.\n"
                        + "- Ti le = " + (savedRatio < 0 ? "+" : "") + savedRatio * -1 + "% cua file ban dau\n"
                   
                );
                progressBar1.setValue(progressBar1.getValue() + incrementValue);
                progressBar1.repaint();
            }
            compressButton.setEnabled(true);
            algorithmsLabel.setEnabled(true);
        });
        procces.start();

    }//GEN-LAST:event_compressButtonActionPerformed

    private void decompressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decompressButtonActionPerformed
        // TODO add your handling code here:

        String extension = jTextField1.getText();
        extension = extension.substring(extension.lastIndexOf('.') + 1);
        String filePath = jTextField3.getText();
        String fileName = jTextField1.getText();
        compressButton.setEnabled(false);
        algorithmsLabel.setEnabled(false);
        progressBar1.setValue(0);
        console.setText("Running... \n");
        final String extensionFinal = extension;
        Thread procces = new Thread(() -> {
            switch (extensionFinal) {
                case "lzw":
                    lw.Decompress(fileName, filePath);
                    break;
                case "huffman":
                    hf.Decompress(fileName, filePath);
                    break;
                case "art":
                    ar.Decompress(fileName, filePath);
                    break;
            }
            console.append(
                    "================================================== \n"
                    + "Decompression hoan tat 100% \n"
            );
            progressBar1.setValue(100);
            progressBar1.repaint();
            decompressButton.setEnabled(true);
        });
        procces.start();

    }//GEN-LAST:event_decompressButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ArithmeticSelect;
    private javax.swing.JCheckBox HuffmanSelect;
    private javax.swing.JCheckBox LZWSelect;
    private javax.swing.JPanel Panel1;
    private javax.swing.JLabel algorithmsLabel;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton compressButton;
    private javax.swing.JTextArea console;
    private javax.swing.JButton decompressButton;
    private javax.swing.JTextField decompressType;
    private javax.swing.JTextField filePathField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JProgressBar progressBar1;
    // End of variables declaration//GEN-END:variables
}
